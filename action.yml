name: 'Find changed submodules'
description: 'Find out which submodule has changed'
inputs:
  github-token:
    description: GitHub token
    default: ''
outputs:
  repo_url:
    description: "URL of the changed submodule"
    value: ${{ steps.git-log.outputs.repo_url }}
  repo_name:
    description: "Name of the changed submodule"
    value: ${{ steps.git-log.outputs.repo_name }}
  repo_commit:
    description: "Commit of the changed submodule"
    value: ${{ steps.git-log.outputs.repo_commit }}
  maintainer_login:
    description: "Package maintainer GitHub username"
    value: ${{ steps.find-user.outputs.maintainer_login }}
runs:
  using: "composite"
  steps: 
    - id: git-log
      shell: bash
      run: |
        REPO_NAME=$(git log --pretty=format: --name-only HEAD^.. | grep "^[^.]")
        echo "New package: ${REPO_NAME}"
        git submodule init ${REPO_NAME}
        REPO_URL=$(git config --list | grep "submodule.${REPO_NAME}.url=" | cut -d'=' -f2)
        REPO_COMMIT=$(git submodule status $REPO_NAME | awk '{print $1}' | sed 's/^[^0-9a-z]*//')
        echo ::set-output name=repo_url::$REPO_URL
        echo ::set-output name=repo_name::$REPO_NAME
        echo ::set-output name=repo_commit::$REPO_COMMIT
    - id: find-user
      shell: bash
      run: |
        if [ "${{inputs.github-token}}" ]; then
          AUTH_HEADER="-H 'Authorization: token ${{inputs.github-token}}'"
        fi
        LOGIN=$(curl $AUTH_HEADER -s https://api.github.com/repos/${{github.repository}}/commits/${{github.sha}} | jq '.author.login')
        if [ "$LOGIN" ] && [ "$LOGIN" != "null" ]; then
          echo "Package maintainer github login: $LOGIN"
          echo ""::set-output name=maintainer_login::$LOGIN""
        fi
